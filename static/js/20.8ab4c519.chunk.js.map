{"version":3,"sources":["constants/ChartConstant.js","components/layout-components/PageHeaderAlt.js","components/shared-components/AvatarStatus/index.js","components/shared-components/DonutChartWidget/index.js","views/app-views/deploymentstatus/AnalyticDashboardData.js","views/app-views/deploymentstatus/index.js"],"names":["COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexPieChartDefaultOption","plotOptions","pie","size","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","formatter","seriesTotals","reduce","a","b","connect","navType","theme","children","background","className","overlap","useState","widthOffset","setWidthOffset","ref","useRef","useEffect","NAV_TYPE_TOP","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","getStyle","defaultOption","Chart","props","DonutChartWidget","customOptions","height","title","extra","options","type","defaultProps","sessionColor","sessionData","sessionLabels","conbinedSessionData","arr","i","length","data","jointSessionData","ProfileInfo","gutter","xs","sm","md","Flex","alignItems","mobileFlex","Icon","DownloadOutlined","justify","lg","maxWidth","map","elm","justifyContent","key","columns","dataSource","rowKey","pagination","dataIndex","render","tags","tag","toUpperCase","model","serial","android_version","bsp_version","deployment_summary","last_deployment","tags_fota","Basic","Item","EyeTwoTone","CopyTwoTone","Component"],"mappings":"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","file":"static/js/20.8ab4c519.chunk.js","sourcesContent":["export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\nexport const COLOR_SUCCESS = '#21B573';  // geekblue\r\nexport const COLOR_PROCESSING = '#17bcff';  // geekblue\r\nexport const COLOR_FAILED = '#ff6b72';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7,\r\n\tCOLOR_PROCESSING,\r\n\tCOLOR_SUCCESS,\r\n\tCOLOR_FAILED\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra } = props\r\n\tlet options = defaultOption\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import { COLORS } from 'constants/ChartConstant';\n\nexport const regionData = [\n\t{\n\t\tcolor: '#3e82f7',\n\t\tname: 'United States of America',\n\t\tvalue: '37.61%'\n  \t},\n  \t{\n\t\tcolor: '#04d182',\n\t\tname: 'Brazil',\n\t\tvalue: '16.79%'\n  \t},\n \t {\n\t\tcolor: '#ffc542',\n\t\tname: 'India',\n\t\tvalue: '12.42%'\n \t},\n  \t{\n\t\tcolor: '#fa8c16',\n\t\tname: 'China',\n\t\tvalue: '9.85%'\n\t},\n\t{\n\t\tcolor: '#ff6b72',\n\t\tname: 'Malaysia',\n\t\tvalue: '7.68%'\n\t},\n\t{\n\t\tcolor: '#a461d8',\n\t\tname: 'Thailand',\n\t\tvalue: '5.11%'\n\t}\n]\n\nexport const pagesViewData = [\n\t{\n    title: 'Home',\n    url:'/app/home/',\n    amount: 7616\n  },\n  {\n    title: 'Resources',\n    url:'/app/resources/',\n    amount: 6923\n  },\n  {\n    title: 'Integrations',\n    url: '/integrations/paypal/',\n    amount: 5228\n  },\n  {\n    title: 'Partners',\n    url: '/partners/our-partners/',\n    amount: 3512\n  },\n  {\n    title: 'Developers',\n    url: 'developers/docs/',\n    amount: 1707\n  }\n]\n\nexport const sessionColor = [COLORS[7], COLORS[8], COLORS[9]]\nexport const sessionData = [3561, 1443, 2462]\nexport const sessionLabels = [\"Processing\", \"Success\", \"Failed\"]\nconst jointSessionData = () => {\n\tlet arr = []\n\tfor (let i = 0; i < sessionData.length; i++) {\n\t\tconst data = sessionData[i];\n\t\tconst label = sessionLabels[i];\n\t\tconst color = sessionColor[i]\n\t\tarr = [...arr, {\n\t\t\tdata: data,\n\t\t\tlabel: label,\n\t\t\tcolor: color\n\t\t}]\n\t}\n\treturn arr\n}\nexport const conbinedSessionData = jointSessionData()\n\nexport const socialMediaReferralData = [\n\t{\n\t\ttitle: 'Facebook',\n\t\tdata:  [{\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47]\n\t\t}],\n\t\tpercentage: 30.1,\n\t\tamount: 322\n\t},\n\t{\n\t\ttitle: 'Twitter',\n\t\tdata:  [{\n\t\t\tdata: [9, 32, 12, 42, 25, 33]\n\t\t}],\n\t\tpercentage: 21.6,\n\t\tamount: 217\n\t},\n\t{\n\t\ttitle: 'Youtube',\n\t\tdata:  [{\n\t\t\tdata: [10, 9, 29, 19, 22, 9, 12]\n\t\t}],\n\t\tpercentage: -7.1,\n\t\tamount: 188\n\t},\n\t{\n\t\ttitle: 'Linkedin',\n\t\tdata:  [{\n\t\t\tdata: [25, 66, 41, 89, 63, 25, 44]\n\t\t}],\n\t\tpercentage: 11.9,\n\t\tamount: 207\n\t\t},\n\t{\n\t\ttitle: 'Dribbble',\n\t\tdata:  [{\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]\n\t\t}],\n\t\tpercentage: -28.5,\n\t\tamount: 86\n\t}\n]\n\nexport const uniqueVisitorsDataDay = {\n\tseries: [\n\t  {\n\t\t\tname: \"Session Duration\",\n\t\t\tdata: [12, 4, 7, 15]\n\t  },\n\t  {\n\t\t\tname: \"Page Views\",\n\t\t\tdata: [8, 6, 10, 11]\n\t  }\n\t],\n\tcategories:[\n\t  '12:00 AM', \n\t\t'6:00 AM', \n\t\t'12:00 PM', \n\t\t'6:00 PM', \n\t]\n}\n\nexport const uniqueVisitorsDataWeek = {\n\tseries: [\n\t  {\n\t\t\tname: \"Session Duration\",\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21]\n\t  },\n\t  {\n\t\t\tname: \"Page Views\",\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29]\n\t  }\n\t],\n\tcategories:[\n\t  '01 Jan', \n\t  '02 Jan', \n\t  '03 Jan', \n\t  '04 Jan', \n\t  '05 Jan', \n\t  '06 Jan', \n\t  '07 Jan'\n\t]\n}\n\nexport const uniqueVisitorsDataMonth = {\n\tseries: [\n\t  {\n\t\t\tname: \"Session Duration\",\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 25, 31, 15]\n\t  },\n\t  {\n\t\t\tname: \"Page Views\",\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 15, 20, 16]\n\t  }\n\t],\n\tcategories:[\n\t\t'03 Jan', \n\t\t'06 Jan', \n\t\t'09 Jan', \n\t\t'12 Jan', \n\t\t'15 Jan',\n\t\t'18 Jan',\n\t\t'21 Jan',\n\t\t'24 Jan',\n\t\t'27 Jan',\n\t\t'30 Jan'\n\t]\n}\n","import React, { Component } from \"react\";\nimport { Table, Divider, Tag, Dropdown,Menu } from \"antd\";\nimport { Icon } from 'components/util-components/Icon'\nimport { \n\tGlobalOutlined,\n\tMailOutlined,\n\tHomeOutlined,\n  SafetyOutlined,\n  EyeTwoTone,\n    EllipsisOutlined, \n    FileAddOutlined,\n    FileSearchOutlined,\n    DownloadOutlined,\n    CopyTwoTone\n} from '@ant-design/icons';\nimport { Row, Col, Card, Avatar, Button,Badge } from 'antd';\nimport PageHeaderAlt from 'components/layout-components/PageHeaderAlt'\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport Flex from 'components/shared-components/Flex'\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\nimport { \n  regionData, \n  sessionData, \n  sessionLabels, \n  conbinedSessionData,\n  sessionColor,\n  pagesViewData,\n  socialMediaReferralData,\n  uniqueVisitorsDataWeek,\n  uniqueVisitorsDataDay,\n  uniqueVisitorsDataMonth\n} from './AnalyticDashboardData'\n\nconst ProfileInfo = props => (\n\n\t\t<Row gutter=\"16\"> \n\t\t\t<Col xs={24} sm={24} md={8}>\n                <Card>\n\t\t\t\t<div className=\"d-md-flex\">\n\t\t\t\t\t<div className=\"ml-md-4 w-100\">\n\t\t\t\t\t\t<Flex alignItems=\"center\" mobileFlex={false} className=\"mb-3 text-md-left text-center\">\n                        <Tag color=\"geekblue\" >\n                                PROCESSING\n                                </Tag>\n                            <h2 className=\"mb-0\">Patch 12345 \n                                \n                            </h2>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Row gutter=\"16\"> \n\t\t\t\t\t\t\t<Col sm={24} md={24}>\n\t\t\t\t\t\t\t\t<p className=\"mt-0 mr-3 text-muted text-md-left text-center\">\n                                Deploying an app patch to the Inventory application \n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Col>\n                        </Row>\n                        <Row gutter=\"16\">    \n                            <Col xs={24} sm={24} md={24}>\n\t\t\t\t\t\t\t\t<Row className=\"mb-2\"> \n\t\t\t\t\t\t\t\t\t<Col xs={12} sm={12} md={9}>\n\t\t\t\t\t\t\t\t\t\t<Icon type={DownloadOutlined} className=\"text-primary font-size-md\"/>\n\t\t\t\t\t\t\t\t\t\t<span className=\"text-muted ml-2\">Started:</span>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col xs={12} sm={12} md={15}>\n\t\t\t\t\t\t\t\t\t\t<span className=\"font-weight-semibold\">9/1/2020 8:00</span>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Col>              \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n                </Card>\n                <DonutChartWidget \n                    series={sessionData} \n                    labels={sessionLabels} \n                    title=\"Devices\"\n                    customOptions={{colors: sessionColor}}\n                    extra={\n                    <Row  justify=\"center\">\n                        <Col xs={20} sm={20} md={20} lg={24}>\n                        <div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\n                            {conbinedSessionData.map(elm => (\n                            <Flex alignItems=\"center\" justifyContent=\"between\" className=\"mb-3\" key={elm.label}>\n                                <div>\n                                <Badge color={elm.color} />\n                                <span className=\"text-gray-light\">{elm.label}</span>\n                                </div>\n                                <span className=\"font-weight-bold text-dark\">{elm.data}</span>\n                            </Flex>\n                            ))}\n                        </div>\n                        </Col>\n                    </Row>\n                    }\n                />\t            \n\n\t\t\t</Col>\n            <Col xs={24} sm={24} md={16}>\n            <Card title=\"Latest Configuration Profiles\" >\n                        <Table \n                          className=\"no-border-last\" \n                          columns={columns} \n                          dataSource={data} \n                          rowKey='id' \n                          pagination={false}\n                        />\n\n                      </Card>\n\n            </Col>\n\t\t</Row>\n\n)\n\n\nconst columns = [\n    {\n      title: \"Model\",\n      dataIndex: \"model\",\n      key: \"model\"\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial\",\n      key: \"derial\"\n    },\n    {\n      title: \"Android\",\n      dataIndex: \"android_version\",\n      key: \"android_version\"\n    },\n    {\n        title: \"Status\",\n        key: \"tags\",\n        dataIndex: \"tags\",\n        render: tags => (\n          <span>\n            {tags.map(tag => {\n              let color = \"geekblue\";\n              if (tag === \"Success\") {\n                color = \"green\";\n              }\n              \n              if (tag === \"Failed\") {\n                color = \"volcano\";\n              }\n              return (\n                <Tag color={color} key={tag}>\n                  {tag.toUpperCase()}\n                </Tag>\n              );\n            })}\n          </span>\n        )\n      },\n  ];\n  \n  const data = [\n    {\n      key: \"1\",\n      model: \"TC 77\",\n      serial: \"1323GDE7834H\",\n      android_version: \"Android 10\",\n      bsp_version: \"BSP 1.23.18\",\n      deployment_summary: \"\",\n      last_deployment: \"Patch 12345\",\n      tags: [\"Processing\"],\n      tags_fota: [\"FOTA Enabled\"]\n    },\n    {\n      key: \"1\",\n      model: \"TC 77\",\n      serial: \"5678GDE7834H\",\n      android_version: \"Android 10\",\n      bsp_version: \"BSP 1.23.18\",\n      deployment_summary: \"\",\n      tags: [\"Success\"],\n      tags_fota: [\"FOTA Enabled\"]\n    },\n    {\n      key: \"1\",\n      model: \"TC 77\",\n      serial: \"9923GDE7834H\",\n      android_version: \"Android 10\",\n      bsp_version: \"BSP 1.23.18\",\n      deployment_summary: \"\",\n      tags: [\"Failed\"],\n      tags_fota: []\n    }  \n  ];\n  \n\nconst crudOptions = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <span>\n          <div className=\"d-flex align-items-center\">\n            <EyeTwoTone />\n            <span className=\"ml-2\">View</span>\n          </div>\n        </span>\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <span>\n          <div className=\"d-flex align-items-center\">\n            <CopyTwoTone />\n            <span className=\"ml-2\">Clone</span>\n          </div>\n        </span>\n      </Menu.Item>\n    </Menu>\n  );\n  \n\n  const columns_config = [\n    {\n      title: \"Profile Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: text => <a href=\"/#\">{text}</a>\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\"\n    }\n  ];\n  const data_config = [\n    {\n      key: \"1\",\n      name: \"Security Profile\",\n      description: \"This profile applies security settings to devices\",\n      date_created: \"Sep 1, 2020\",\n      tags: [\"OEMConfig\"]\n    },\n    {\n      key: \"2\",\n      name: \"Inventory App configuration\",\n      description: \"This profile configures Enterprise browser for the Inventory App\",\n      date_created: \"Sep 10, 2020\",\n      tags: [\"Enterprise Browser\"]\n    },\n    {\n      key: \"3\",\n      name: \"Touch Mode - Delivery\",\n      description: \"This profile configures the device for gloved touch mode users\",\n      date_created: \"Sep 22, 2020\",\n      tags: [\"OEMConfig\"]\n    }    \n  ];\nexport class Basic extends Component {\n  render() {\n    const avatarSize = 150;\n    return (\n      <>\n\n      <ProfileInfo  />\n\n\n      </>\n    )\n\n    ;\n  }\n}\n\nexport default Basic;\n"],"sourceRoot":""}