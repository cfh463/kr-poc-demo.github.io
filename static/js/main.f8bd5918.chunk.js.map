{"version":3,"sources":["components/shared-components/Flex/index.js","redux/constants/Auth.js","redux/reducers/Auth.js","redux/reducers/Theme.js","redux/constants/Theme.js","redux/reducers/index.js","services/FirebaseService.js","redux/sagas/Auth.js","redux/sagas/index.js","redux/store/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","utils/index.js","redux/actions/Theme.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavPanel.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","components/shared-components/Loading/index.js","views/app-views/index.js","layouts/app-layout/index.js","views/auth-views/index.js","layouts/auth-layout/index.js","lang/index.js","lang/entries/en_US.js","views/index.js","App.js","serviceWorker.js","index.js","constants/ThemeConstant.js","redux/actions/Auth.js","components/util-components/Icon/index.js","auth/FirebaseAuth.js","configs/FirebaseConfig.js","configs/EnvironmentConfig.js","configs/AppConfig.js"],"names":["Flex","props","children","className","alignItems","justifyContent","mobileFlex","flexDirection","defaultProps","SIGNIN","AUTHENTICATED","SIGNOUT","SIGNOUT_SUCCESS","SIGNUP","SIGNUP_SUCCESS","SHOW_AUTH_MESSAGE","HIDE_AUTH_MESSAGE","SHOW_LOADING","AUTH_TOKEN","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_GOOGLE_AUTHENTICATED","SIGNIN_WITH_FACEBOOK","SIGNIN_WITH_FACEBOOK_AUTHENTICATED","initState","loading","message","showMessage","redirect","token","localStorage","getItem","auth","state","action","type","initTheme","THEME_CONFIG","theme","navCollapsed","sideNavTheme","locale","navType","topNavColor","headerNavColor","mobileNav","reducers","combineReducers","Theme","Auth","FirebaseService","signInEmailRequest","email","password","a","signInWithEmailAndPassword","then","user","catch","err","signOutRequest","signOut","signInGoogleRequest","signInWithPopup","googleAuthProvider","signInFacebookRequest","facebookAuthProvider","signUpEmailRequest","createUserWithEmailAndPassword","signInWithFBEmail","signUpWithFBEmail","signInWithFBGoogle","signInWithFacebook","rootSaga","takeEvery","payload","call","put","showAuthMessage","setItem","uid","authenticated","undefined","signOutUser","removeItem","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","all","fork","getState","sagaMiddleware","createSagaMiddleware","middlewares","store","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","configureStore","injectIntl","withRef","dashBoardNavTree","key","path","title","icon","HomeOutlined","breadcrumb","submenu","DashboardOutlined","CloudUploadOutlined","MobileOutlined","ProfileOutlined","DownloadOutlined","AppstoreAddOutlined","navigationConfig","Utils","name","initials","match","shift","pop","toUpperCase","navTree","route","p","hasOwnProperty","this","getRouteInfo","hex","cutHex","h","charAt","substring","parseInt","hexToG","hexToB","color","percent","R","G","B","RR","toString","length","GG","BB","number","positive","negative","b","toLowerCase","list","value","data","filter","item","input","indexOf","searchText","screens","breakpoints","push","onMobileNavToggle","SubMenu","Menu","useBreakpoint","Grid","setLocale","isLocaleOn","localeKey","id","setDefaultOpen","keyList","keyString","arr","split","index","elm","SideNavContent","routeInfo","hideGroupTitle","localization","isMobile","utils","getBreakPoint","includes","closeMobileNav","SIDE_NAV_LIGHT","mode","style","height","borderRight","defaultSelectedKeys","defaultOpenKeys","map","menu","ItemGroup","subMenuFirst","Icon","subMenuSecond","Item","onClick","to","TopNavContent","backgroundColor","popupClassName","connect","NAV_TYPE_SIDE","Sider","Layout","SIDE_NAV_DARK","width","SIDE_NAV_WIDTH","collapsed","autoHide","getColorContrast","NAV_TYPE_TOP","getLogoWidthGutter","isNavTop","mobileLogo","SIDE_NAV_COLLAPSED_WIDTH","getLogo","logoType","getLogoDisplay","src","alt","APP_NAME","onClose","placement","closable","visible","bodyStyle","padding","ArrowLeftOutlined","NavPanel","showDrawer","setState","SettingOutlined","Component","optionList","getOptionList","navigationTree","optionTree","navItem","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchInput","active","close","useState","setValue","options","setOptions","inputRef","useRef","current","focus","ref","dropdownClassName","onSelect","onSearch","label","filterOption","inputValue","option","placeholder","prefix","SearchOutlined","CloseOutlined","Header","toggleCollapsedNav","searchActive","setSearchActive","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","forEach","i","assignBreadcrumb","obj","BreadcrumbRoute","withRouter","pathSnippets","location","pathname","buildBreadcrumb","_","url","slice","join","AppBreadcrumb","PageHeader","display","Footer","Date","getFullYear","href","e","preventDefault","LoadingOutlined","fontSize","spin","Loading","align","cover","indicator","AppViews","fallback","component","lazy","from","Content","currentRouteInfo","isNavSide","paddingLeft","AuthLayout","AuthViews","AppLocale","en","antd","antdEnUS","messages","enMsg","currentAppLocale","exact","App","Views","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","signIn","signInWithGoogle","hideAuthMessage","showLoading","React","createElement","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","currentUser","GoogleAuthProvider","FacebookAuthProvider","TwitterAuthProvider","GithubAuthProvider","env","API_ENDPOINT_URL","API_BASE_URL"],"mappings":"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","file":"static/js/main.f8bd5918.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Flex = props => {\r\n\tconst { children, className, alignItems, justifyContent, mobileFlex, flexDirection } = props\r\n\tconst getFlexResponsive = () => mobileFlex ? 'd-flex' : 'd-md-flex'\r\n\treturn (\r\n\t\t<div className={`${getFlexResponsive()} ${className} ${flexDirection?('flex-' + flexDirection): ''} ${alignItems?('align-items-' + alignItems):''} ${justifyContent?('justify-content-' + justifyContent):''}` }>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nFlex.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\talignItems: PropTypes.string,\r\n\tflexDirection: PropTypes.string,\r\n\tjustifyContent: PropTypes.string,\r\n\tmobileFlex: PropTypes.bool\r\n}\r\n\r\nFlex.defaultProps = {\r\n\tmobileFlex: true,\r\n\tflexDirection: 'row',\r\n\tclassName: ''\r\n};\r\n\r\n\r\nexport default Flex\r\n","export const SIGNIN = 'SIGNIN'; \r\nexport const AUTHENTICATED = 'AUTHENTICATED';\r\nexport const SIGNOUT = 'SIGNOUT';\r\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS'\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SHOW_AUTH_MESSAGE = 'SHOW_AUTH_MESSAGE'\r\nexport const HIDE_AUTH_MESSAGE = 'HIDE_AUTH_MESSAGE'\r\nexport const SHOW_LOADING = 'SHOW_LOADING'\r\nexport const AUTH_TOKEN = 'auth_token'\r\nexport const SIGNIN_WITH_GOOGLE = 'SIGNIN_WITH_GOOGLE'\r\nexport const SIGNIN_WITH_GOOGLE_AUTHENTICATED = 'SIGNIN_WITH_GOOGLE_AUTHENTICATED'\r\nexport const SIGNIN_WITH_FACEBOOK = 'SIGNIN_WITH_FACEBOOK'\r\nexport const SIGNIN_WITH_FACEBOOK_AUTHENTICATED = 'SIGNIN_WITH_FACEBOOK_AUTHENTICATED'","import {\r\n\tAUTH_TOKEN,\r\n\tAUTHENTICATED,\r\n\tSHOW_AUTH_MESSAGE,\r\n\tHIDE_AUTH_MESSAGE,\r\n\tSIGNOUT_SUCCESS,\r\n\tSIGNUP_SUCCESS,\r\n\tSHOW_LOADING,\r\n\tSIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nconst initState = {\r\n  loading: false,\r\n  message: '',\r\n  showMessage: false,\r\n  redirect: '',\r\n  token: localStorage.getItem(AUTH_TOKEN),\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase AUTHENTICATED:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\tcase SHOW_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: action.message,\r\n\t\t\t\tshowMessage: true,\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\tcase HIDE_AUTH_MESSAGE: \r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmessage: '',\r\n\t\t\t\tshowMessage: false,\r\n\t\t\t}\r\n\t\tcase SIGNOUT_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: null,\r\n\t\t\t\tredirect: '/',\r\n\t\t\t\tloading: false\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNUP_SUCCESS: {\r\n\t\t\treturn {\r\n\t\t\t  ...state,\r\n\t\t\t  loading: false,\r\n\t\t\t  token: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SHOW_LOADING: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_GOOGLE_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase SIGNIN_WITH_FACEBOOK_AUTHENTICATED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false,\r\n\t\t\t\ttoken: action.token\r\n\t\t\t}\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default auth","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  CHANGE_LOCALE,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV\r\n} from '../constants/Theme';\r\nimport { THEME_CONFIG } from 'configs/AppConfig'\r\n\r\nconst initTheme = {...THEME_CONFIG};\r\n\r\nconst theme = (state = initTheme, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SIDE_NAV_STYLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        sideNavTheme: action.sideNavTheme\r\n      };\r\n    case CHANGE_LOCALE:\r\n      return {\r\n        ...state,\r\n        locale: action.locale\r\n      };\r\n    case NAV_TYPE_CHANGE:\r\n      return {\r\n        ...state,\r\n        navType: action.navType\r\n      };\r\n    case TOP_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        topNavColor: action.topNavColor\r\n      };\r\n    case HEADER_NAV_COLOR_CHANGE:\r\n      return {\r\n        ...state,\r\n        headerNavColor: action.headerNavColor\r\n      };\r\n    case TOGGLE_MOBILE_NAV:\r\n      return {\r\n        ...state,\r\n        mobileNav: action.mobileNav\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default theme","export const TOGGLE_COLLAPSED_NAV = 'TOGGLE_COLLAPSED_NAV';\r\nexport const CHANGE_LOCALE = 'CHANGE_LOCALE';\r\nexport const SIDE_NAV_STYLE_CHANGE = 'SIDE_NAV_STYLE_CHANGE';\r\nexport const NAV_TYPE_CHANGE = 'NAV_TYPE_CHANGE';\r\nexport const TOP_NAV_COLOR_CHANGE = 'TOP_NAV_COLOR_CHANGE';\r\nexport const HEADER_NAV_COLOR_CHANGE = 'HEADER_NAV_COLOR_CHANGE';\r\nexport const TOGGLE_MOBILE_NAV = 'TOGGLE_MOBILE_NAV'","import { combineReducers } from 'redux';\r\nimport Auth from './Auth';\r\nimport Theme from './Theme';\r\n\r\nconst reducers = combineReducers({\r\n    theme: Theme,\r\n    auth: Auth\r\n});\r\n\r\nexport default reducers;","import { auth, googleAuthProvider, facebookAuthProvider } from 'auth/FirebaseAuth';\r\n\r\nconst FirebaseService = {}\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n\tawait auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInEmailRequest = async (email, password) =>\r\n  await auth.signInWithEmailAndPassword(email, password).then(user => user).catch(err => err);\r\n\t\t\r\nFirebaseService.signOutRequest = async () =>\r\n\tawait auth.signOut().then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInGoogleRequest = async () =>\r\n  await auth.signInWithPopup(googleAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signInFacebookRequest = async () =>\r\n  await auth.signInWithPopup(facebookAuthProvider).then(user => user).catch(err => err);\r\n\r\nFirebaseService.signUpEmailRequest = async (email, password) =>\r\n\tawait auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(err => err);\t\r\n\t\r\nexport default FirebaseService","import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport Auth from './Auth';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    Auth(),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers,  preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n","import React from \"react\";\r\nimport {FormattedMessage, injectIntl} from \"react-intl\";\r\n\r\nconst IntlMessage = props => <FormattedMessage {...props} />;\r\nexport default injectIntl(IntlMessage, {\r\n  withRef: false\r\n});\r\n","import { \r\n  DashboardOutlined,\r\n  HomeOutlined,\r\n  MobileOutlined,\r\n  CloudUploadOutlined,\r\n  ProfileOutlined,\r\n  AppstoreAddOutlined,\r\n  BulbOutlined,\r\n  DownloadOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst dashBoardNavTree = [{\r\n  key: 'home',\r\n  path: '/app/home',\r\n  title: 'MDNA Cloud',\r\n  icon: HomeOutlined,\r\n  breadcrumb: false,\r\n  submenu: [\r\n    {\r\n      key: 'dashboard',\r\n      path: '/app/home',\r\n      title: 'Dashboard',\r\n      icon: DashboardOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n\r\n    {\r\n      key: 'enrollment',\r\n      path: '/app/enrollment',\r\n      title: 'Enrollment Profiles',\r\n      icon: CloudUploadOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'devices',\r\n      path: '/app/devices',\r\n      title: 'Devices',\r\n      icon: MobileOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'configprofiles',\r\n      path: '/app/configprofiles',\r\n      title: 'Configuration profiles',\r\n      icon: ProfileOutlined,\r\n      breadcrumb: false,\r\n      submenu: [\r\n        {\r\n          key: 'apps-project-list',\r\n          path: '/app/configprofiles',\r\n          title: 'OEMConfig',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        },\r\n        {\r\n          key: 'apps-eb-profile',\r\n          path: '/app/ebprofiles',\r\n          title: 'Enterprise Browser',\r\n          icon: '',\r\n          breadcrumb: false,\r\n          submenu: []\r\n        }\r\n      \r\n      ]\r\n    },\r\n    {\r\n      key: 'deployment',\r\n      path: '/app/deployments',\r\n      title: 'Deployments',\r\n      icon: DownloadOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    },\r\n    {\r\n      key: 'updates',\r\n      path: '/app/updates',\r\n      title: 'Lifeguard updates',\r\n      icon: AppstoreAddOutlined,\r\n      breadcrumb: false,\r\n      submenu: []\r\n    }\r\n\r\n  ]\r\n}\r\n\r\n\r\n// ,\r\n// {\r\n//   key: 'rc',\r\n//   path: '/app/rc',\r\n//   title: 'Remote Control',\r\n//   icon: AuditOutlined,\r\n//   breadcrumb: false,\r\n//   submenu: []\r\n// }\r\n\r\n\r\n]\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree\r\n]\r\n\r\nexport default navigationConfig;\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  return navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t  if( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import {\r\n  TOGGLE_COLLAPSED_NAV,\r\n  SIDE_NAV_STYLE_CHANGE,\r\n  CHANGE_LOCALE,\r\n  NAV_TYPE_CHANGE,\r\n  TOP_NAV_COLOR_CHANGE,\r\n  HEADER_NAV_COLOR_CHANGE,\r\n  TOGGLE_MOBILE_NAV\r\n} from '../constants/Theme';\r\n\r\nexport function toggleCollapsedNav(navCollapsed) {\r\n  return {\r\n    type: TOGGLE_COLLAPSED_NAV,\r\n    navCollapsed\r\n  };\r\n}\r\n\r\nexport function onNavStyleChange(sideNavTheme) {\r\n  return {\r\n    type: SIDE_NAV_STYLE_CHANGE,\r\n    sideNavTheme\r\n  };\r\n}\r\n\r\nexport function onLocaleChange(locale) {\r\n  return {\r\n    type: CHANGE_LOCALE,\r\n    locale\r\n  };\r\n}\r\n\r\nexport function onNavTypeChange(navType) {\r\n  return {\r\n    type: NAV_TYPE_CHANGE,\r\n    navType\r\n  };\r\n}\r\n\r\nexport function onTopNavColorChange(topNavColor) {\r\n  return {\r\n    type: TOP_NAV_COLOR_CHANGE,\r\n    topNavColor\r\n  };\r\n}\r\n\r\nexport function onHeaderNavColorChange(headerNavColor) {\r\n  return {\r\n    type: HEADER_NAV_COLOR_CHANGE,\r\n    headerNavColor\r\n  };\r\n}\r\n\r\nexport function onMobileNavToggle(mobileNav) {\r\n  return {\r\n    type: TOGGLE_MOBILE_NAV,\r\n    mobileNav\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n","import React from \"react\";\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport MenuContent from './MenuContent'\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, sideNavTheme, routeInfo, hideGroupTitle, localization = true }) => {\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle, localization}\r\n  return (\r\n    <Sider \r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE} \r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\n\r\nexport const TopNav = ({topNavColor, localization = true}) => {\r\n\tconst props = { topNavColor, localization }\r\n\treturn (\r\n\t\t<div className={`top-nav ${utils.getColorContrast(topNavColor)}`} style={{backgroundColor: topNavColor}}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { connect } from \"react-redux\";\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst getLogoWidthGutter = (props, isMobile) => {\r\n  const { navCollapsed, navType } = props;\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  if(isMobile && !props.mobileLogo) {\r\n    return 0\r\n  }\r\n  if(isNavTop) {\r\n    return 'auto'\r\n  }\r\n  if(navCollapsed) {\r\n    return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n  } else {\r\n    return `${SIDE_NAV_WIDTH}px`\r\n  }\r\n}\r\n\r\nconst getLogo = (props) => {\r\n  const { navCollapsed, logoType } = props;\r\n  if(logoType === 'light') {\r\n    if(navCollapsed) {\r\n      return '/img/logo-sm-white.png'\r\n    }\r\n    return '/img/logo-white.png'\r\n  }\r\n\r\n  if (navCollapsed) {\r\n    return '/img/logo-sm.png'\r\n  }\r\n  return '/img/logo.png'\r\n}\r\n\r\nconst getLogoDisplay = (isMobile, mobileLogo) => {\r\n  if(isMobile && !mobileLogo) {\r\n    return 'd-none'\r\n  } else {\r\n    return 'logo'\r\n  }\r\n}\r\n\r\nexport const Logo = (props) => {\r\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n  return (\r\n    <div\r\n      className={getLogoDisplay(isMobile, props.mobileLogo)} \r\n      style={{width: `${getLogoWidthGutter(props, isMobile)}`}}>\r\n      <img src={getLogo(props)} alt={`${APP_NAME} logo`}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType } =  theme;\r\n  return { navCollapsed, navType }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Logo);\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n  sideNavTheme,\r\n  mobileNav,\r\n  onMobileNavToggle,\r\n  routeInfo,\r\n  hideGroupTitle,\r\n  localization = true,\r\n}) => {\r\n  const props = { sideNavTheme, routeInfo, hideGroupTitle, localization };\r\n\r\n  const onClose = () => {\r\n    onMobileNavToggle(false);\r\n  };\r\n\r\n  return (\r\n    <Drawer\r\n      placement=\"left\"\r\n      closable={false}\r\n      onClose={onClose}\r\n      visible={mobileNav}\r\n      bodyStyle={{ padding: 5 }}\r\n    >\r\n      <Flex flexDirection=\"column\" className=\"h-100\">\r\n        <Flex justifyContent=\"between\" alignItems=\"center\">\r\n          <Logo mobileLogo={true} />\r\n          <div className=\"nav-close\" onClick={() => onClose()}>\r\n            <ArrowLeftOutlined />\r\n          </div>\r\n        </Flex>\r\n        <div className=\"mobile-nav-menu\">\r\n          <Scrollbars autoHide>\r\n            <MenuContent type={NAV_TYPE_SIDE} {...props} />\r\n          </Scrollbars>\r\n        </div>\r\n      </Flex>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, mobileNav } = theme;\r\n  return { navCollapsed, sideNavTheme, mobileNav };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MobileNav);\r\n","import React, { Component } from 'react';\r\nimport { SettingOutlined } from '@ant-design/icons';\r\nimport { Drawer, Menu } from 'antd';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class NavPanel extends Component {\r\n\tstate = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n\t};\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n      <>\r\n        <Menu mode=\"horizontal\">\r\n          <Menu.Item onClick={this.showDrawer}>\r\n            <SettingOutlined className=\"nav-icon mr-0\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Drawer\r\n          title=\"Theme Config\"\r\n          placement=\"right\"\r\n          width={350}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n        >\r\n          NavPanel Contents here!\r\n        </Drawer>\r\n      </>\r\n    );\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { locale } =  theme;\r\n  return { locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavPanel);","import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n\tCloseOutlined,\r\n} from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport SearchInput from './SearchInput';\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor } = props\r\n\tconst mode = utils.getColorContrast(headerNavColor)\r\n\r\n\treturn (\r\n\t\t<div className={`nav-search ${active ? 'nav-search-active' : ''} ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n\t\t\t<div className=\"d-flex align-items-center w-100\">\r\n\t\t\t\t<SearchInput close={close} active={active}/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Menu, Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = utils.getColorContrast(headerNavColor)\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n  return (\r\n    <Header className={`app-header ${mode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={mode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <Menu mode=\"horizontal\">\r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <Menu.Item key=\"0\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </Menu.Item>\r\n              }\r\n            </Menu>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = withRouter(props => {\r\n\tconst { location } = props;\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst buildBreadcrumb = pathSnippets.map((_, index) => {\r\n    const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n    return (\r\n      <Breadcrumb.Item key={url}>\r\n        <Link to={url}>{breadcrumbData[url]}</Link>\r\n      </Breadcrumb.Item>\r\n    );\r\n\t});\r\n  \r\n  return (\r\n\t\t<Breadcrumb>\r\n\t\t\t{buildBreadcrumb}\r\n\t\t</Breadcrumb>\r\n  );\r\n});\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","import React from 'react'\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div className=\"app-page-header\">\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","import React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\n\r\nexport default function Footer() {\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span>\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nconst Icon = <LoadingOutlined style={{ fontSize: 35 }} spin />\r\n\r\nconst Loading = (props) => {\r\n\tconst { align, cover } = props\r\n\treturn (\r\n\t\t<div className={`loading text-${align} cover-${cover}`}>\r\n\t\t\t<Spin indicator={Icon} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nLoading.propTypes = {\r\n\tsize: PropTypes.string,\r\n\tcover: PropTypes.string\r\n}\r\n\r\nLoading.defaultProps = {\r\n\talign: 'center',\r\n\tcover: 'inline'\r\n};\r\n\r\nexport default Loading","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\n\r\nexport const AppViews = ({match}) => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"content\"/>}>\r\n      <Switch>\r\n        <Route path={`${match.url}/login`} component={lazy(() => import(`./login`))} />\r\n        \r\n        <Route path={`${match.url}/home`} component={lazy(() => import(`./home`))} />\r\n        <Route path={`${match.url}/enrollment`} component={lazy(() => import(`./enrollment`))} />\r\n        <Route path={`${match.url}/configprofiles`} component={lazy(() => import(`./configprofiles`))} />\r\n        <Route path={`${match.url}/ebprofiles`} component={lazy(() => import(`./ebprofiles`))} />\r\n        <Route path={`${match.url}/deployments`} component={lazy(() => import(`./deployments`))} />\r\n        <Route path={`${match.url}/devices`} component={lazy(() => import(`./devices-fb`))} />\r\n        <Route path={`${match.url}/updates`} component={lazy(() => import(`./updates`))} />\r\n        <Route path={`${match.url}/deploymentstatus`} component={lazy(() => import(`./deploymentstatus`))} />\r\n        <Redirect from={`${match.url}`} to={`${match.url}/home`}  />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n","import React from 'react';\r\nimport { Layout, Grid } from 'antd';\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <Switch>\r\n                <Route path=\"\" component={AppViews} />\r\n              </Switch>\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(AppLayout));","import React, { lazy, Suspense } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Loading from 'components/shared-components/Loading';\r\n\r\nexport const AppViews = ({match}) => {\r\n  return (\r\n    <Suspense fallback={<Loading cover=\"page\"/>}>\r\n      <Switch>\r\n        <Route path={`${match.url}/login`} component={lazy(() => import(`./authentication/login`))} />\r\n        <Route path={`${match.url}/login-1`} component={lazy(() => import(`./authentication/login-1`))} />\r\n        <Route path={`${match.url}/login-2`} component={lazy(() => import(`./authentication/login-2`))} />\r\n        <Route path={`${match.url}/register-1`} component={lazy(() => import(`./authentication/register-1`))} />\r\n        <Route path={`${match.url}/register-2`} component={lazy(() => import(`./authentication/register-2`))} />\r\n        <Route path={`${match.url}/forgot-password`} component={lazy(() => import(`./authentication/forgot-password`))} />\r\n        <Route path={`${match.url}/error-1`} component={lazy(() => import(`./errors/error-page-1`))} />\r\n        <Route path={`${match.url}/error-2`} component={lazy(() => import(`./errors/error-page-2`))} />\r\n        <Redirect from={`${match.url}`} to={`${match.url}/login`} />\r\n      </Switch>\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default AppViews;\r\n\r\n","import React from 'react'\r\nimport { Switch, Route, } from \"react-router-dom\";\r\nimport AuthViews from 'views/auth-views'\r\n\r\nexport const AuthLayout = () => {\r\n\treturn (\r\n\t\t<div className=\"auth-container\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"\" component={AuthViews} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default AuthLayout\r\n","import enLang from './entries/en_US';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n};\r\n\r\nexport default AppLocale;","import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from 'layouts/auth-layout';\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from 'antd';\r\n\r\nexport const Views = (props) => {\r\n  const { locale } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}>\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/app\" />\r\n          </Route>\r\n          <Route path=\"/auth\">\r\n            <AuthLayout />\r\n          </Route>\r\n          <Route path=\"/app\">\r\n            <AppLayout />\r\n          </Route>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } =  theme;\r\n  const { token } = auth;\r\n  return { locale, token }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Views from './views';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/\" component={Views}/>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const ROW_GUTTER = 16;\r\nexport const SIDE_NAV_WIDTH = 250;\r\nexport const SIDE_NAV_COLLAPSED_WIDTH = 80;\r\nexport const SIDE_NAV_LIGHT = 'SIDE_NAV_LIGHT';\r\nexport const SIDE_NAV_DARK = 'SIDE_NAV_DARK';\r\nexport const NAV_TYPE_SIDE = 'SIDE'\r\nexport const NAV_TYPE_TOP = 'TOP'\r\n","import {\r\n  SIGNIN,\r\n  AUTHENTICATED,\r\n  SIGNOUT,\r\n  SIGNOUT_SUCCESS,\r\n  SHOW_AUTH_MESSAGE,\r\n  HIDE_AUTH_MESSAGE,\r\n  SIGNUP,\r\n  SIGNUP_SUCCESS,\r\n  SHOW_LOADING,\r\n  SIGNIN_WITH_GOOGLE,\r\n  SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n  SIGNIN_WITH_FACEBOOK,\r\n  SIGNIN_WITH_FACEBOOK_AUTHENTICATED\r\n} from '../constants/Auth';\r\n\r\nexport const signIn = (user) => {\r\n  return {\r\n    type: SIGNIN,\r\n    payload: user\r\n  }\r\n};\r\n\r\nexport const authenticated = (token) => {\r\n  return {\r\n    type: AUTHENTICATED,\r\n    token\r\n  }\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGNOUT\r\n  };\r\n};\r\n\r\nexport const signOutSuccess = () => {\r\n  return {\r\n    type: SIGNOUT_SUCCESS,\r\n  }\r\n};\r\n\r\nexport const signUp = (user) => {\r\n  return {\r\n    type: SIGNUP,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = (token) => {\r\n  return {\r\n    type: SIGNUP_SUCCESS,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithGoogle = () => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE\r\n  };\r\n};\r\n\r\nexport const signInWithGoogleAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_GOOGLE_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const signInWithFacebook = () => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK\r\n  };\r\n};\r\n\r\nexport const signInWithFacebookAuthenticated = (token) => {\r\n  return {\r\n    type: SIGNIN_WITH_FACEBOOK_AUTHENTICATED,\r\n    token\r\n  };\r\n};\r\n\r\nexport const showAuthMessage = (message) => {\r\n  return {\r\n    type: SHOW_AUTH_MESSAGE,\r\n    message\r\n  };\r\n};\r\n\r\nexport const hideAuthMessage = () => {\r\n  return {\r\n    type: HIDE_AUTH_MESSAGE,\r\n  };\r\n};\r\n\r\nexport const showLoading = () => {\r\n  return {\r\n    type: SHOW_LOADING,\r\n  };\r\n};\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport firebaseConfig from 'configs/FirebaseConfig';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase utils\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth();\r\nconst currentUser = auth.currentUser\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\nconst twitterAuthProvider = new firebase.auth.TwitterAuthProvider();\r\nconst githubAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport {\r\n\tdb,\r\n\tauth,\r\n\tcurrentUser,\r\n\tgoogleAuthProvider,\r\n\tfacebookAuthProvider,\r\n\ttwitterAuthProvider,\r\n\tgithubAuthProvider\r\n};","export default {\r\n  apiKey: \"AIzaSyCRztlVVFeXNCegc1YK7EEhpjqnlB_zcl0\",\r\n    authDomain: \"emc-kr-dev-d.firebaseapp.com\",\r\n    databaseURL: \"https://emc-kr-dev-d.firebaseio.com\",\r\n    projectId: \"emc-kr-dev-d\",\r\n    storageBucket: \"emc-kr-dev-d.appspot.com\",\r\n    messagingSenderId: \"359668273288\",\r\n    appId: \"1:359668273288:web:1adaefc2d8b64c8ad68f3d\",\r\n    measurementId: \"G-YYKCJJRF05\"\r\n};\r\n\r\n","const dev = {\r\n  API_ENDPOINT_URL: 'https://jsonplaceholder.typicode.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test.com'\r\n};\r\n\r\nconst getEnv = () => {\r\n\tswitch (process.env.NODE_ENV) {\r\n\t\tcase 'development':\r\n\t\t\treturn dev\r\n\t\tcase 'production':\r\n\t\t\treturn prod\r\n\t\tcase 'test':\r\n\t\t\treturn test\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport const env = getEnv()\r\n","import { SIDE_NAV_LIGHT,SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { env } from './EnvironmentConfig'\r\n\r\nexport const APP_NAME = 'Zebra MDNA Cloud';\r\nexport const API_BASE_URL = env.API_ENDPOINT_URL\r\n\r\nexport const THEME_CONFIG = {\r\n\tnavCollapsed: false,\r\n\tsideNavTheme: SIDE_NAV_DARK,\r\n\tlocale: 'en',\r\n\tnavType: NAV_TYPE_SIDE,\r\n\ttopNavColor: '#3e82f7',\r\n\theaderNavColor: '#ffffff',\r\n\tmobileNav: false\r\n};\r\n"],"sourceRoot":""}